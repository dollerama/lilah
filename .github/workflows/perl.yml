name: ubuntu

# https://github.com/actions/checkout/issues/1590
env:
    ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
    perl:
        environment: automated_testing
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os:
                - ubuntu-22.04
            perl-version:
                - '5.8-buster'
                - '5.10-buster'
                - '5.12-buster'
                - '5.14-buster'
                - '5.16-buster'
                - '5.18-buster'
                - '5.20-buster'
                - '5.22-buster'
                - '5.24-buster'
                - '5.26-buster'
                - '5.28-buster'
                - '5.30-bullseye'
                - '5.32-bullseye'
                - '5.34-bullseye'
                - '5.36-bookworm'
                - '5.38-bookworm'
                - 'latest'
        container:
            image: perl:${{ matrix.perl-version }}
        steps:
            - uses: actions/checkout@v3
            - name: Platform check
              run: uname -a
            - name: Perl version check
              run: |
                perl -V
                perl -v | perl -0777 -ne 'm/(v5\.\d+)/ && print "PERL_VERSION=$1"' >> $GITHUB_ENV
# Some older versions of Perl have trouble with hostnames in certs. I
# haven't figured out why.
            - name: Setup environment
              run: |
                echo "PERL_LWP_SSL_VERIFY_HOSTNAME=0" >> $GITHUB_ENV
# I had some problems with openssl on Ubuntu, so I punted by installing
# cpanm first, which is easy. I can install IO::Socket::SSL with that,
# then switch back to cpan. I didn't explore this further, but what you
# see here hasn't caused problems for me.
# Need HTTP::Tiny 0.055 or later.
            - name: Install cpanm and multiple modules
              run: |
                curl -L https://cpanmin.us | perl - App::cpanminus
                cpanm --notest IO::Socket::SSL App::Cpan HTTP::Tiny ExtUtils::MakeMaker Test::Manifest Test::More
# Install the dependencies, again not testing them. This installs the
# module in the current directory, so we end up installing the module,
# but that's not a big deal.
            - name: Install dependencies
              run: |
                cpanm --notest --installdeps --with-suggests --with-recommends .
            - name: Show cpanm failures
              if:  ${{ failure() }}
              run: |
                cat /github/home/.cpanm/work/*/build.log
            - name: Run tests
              run: |
                perl Makefile.PL
                make test
# Run author tests, but only if there's an xt/ directory
            - name: Author tests
              if: hashFiles('xt') != ''
              run: |
                cpanm --notest Test::CPAN::Changes
                prove -r -b xt
# Running tests in parallel should be faster, but it's also more
# tricky in cases where different tests share a feature, such as a
# file they want to write to. Parallel tests can stomp on each other.
# Test in parallel to catch that, because other people will test your
# stuff in parallel.
            - name: Build Docs
              run: |
                perl src/scripts/WrenDocs.pl
                HARNESS_OPTIONS=j10 make test
